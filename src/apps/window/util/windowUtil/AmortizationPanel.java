package apps.window.util.windowUtil;

import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Iterator;
import java.util.Vector;

import beans.StartUPData;

import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

import util.commonUTIL;
import apps.window.referencewindow.DateCellEditor12;
import apps.window.tradewindow.panelWindow.ScheduleAmort;

public class AmortizationPanel extends javax.swing.JPanel {

    /** Creates new form NewJPanel */
	DefaultTableModel amorModel = null;
	Vector freq = null;
	Vector tenor = null;
	String amoritization = "";
			String scheduledValues = ""; 
			public String getScheduledValues() {
				return scheduledValues;
			}
			public void setScheduledValues(String scheduledValues) {
				this.scheduledValues = scheduledValues;
			}
		public	String getAmoritization() {
		return amoritization;
	}
	public void setAmoritization(String amoritization) {
		this.amoritization = amoritization;
	}
	public AmortizationPanel() {
        initComponents();
    }
    public AmortizationPanel(Vector freq,Vector tenor) {
    	this.freq = freq;
    	this.tenor = tenor;
        initComponents();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */ // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
     //   jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
      
        jCheckBox1.setText("Open Term");

        jCheckBox2.setText("Loan Term");

        String amorcol[] = {"Field Details    ", "Value      "};
        amorModel = new DefaultTableModel (amorcol,0);
      //  jTable1.setModel(amorModel);
        JComboBox tenorcomboBox11 = new JComboBox( convertVectortoSringArray(tenor) );
        JComboBox freqcomboBox11 = new JComboBox( convertVectortoSringArray(freq) );
     
        final DateCellEditor12 datecel9 = new DateCellEditor12();
        final DefaultCellEditor tenorce13 = new DefaultCellEditor( tenorcomboBox11 );
        final DefaultCellEditor feqce13 = new DefaultCellEditor( freqcomboBox11 );
  	//jTable1.setModel(amorModel);
	 
  	jTable1  = new javax.swing.JTable(amorModel)    	{
				      		//  Determine editor to be used by row
		public TableCellEditor getCellEditor(int row, int column)
		{
			int modelColumn = convertColumnIndexToModel( column );	
			
		if (modelColumn == 1 && (row == 1 || row == 2) ) {
			 TableCellEditor t1 = ((TableCellEditor) datecel9);     
			
			return (TableCellEditor)t1;
		}if (modelColumn == 1 && (row ==4) ) {
			 TableCellEditor t1 = ((TableCellEditor) feqce13);     
				
			return (TableCellEditor)t1;
		}
		else   {
			return super.getCellEditor(1, 0);
		}
		
		}
		};
        jButton1.setText("Schedule");
        jButton1.setVisible(false);

        jButton2.setText("Apply");
       final ScheduleAmort   scamort = new  ScheduleAmort();;
        
        jButton1.addActionListener(new java.awt.event.ActionListener() {
        	 public void actionPerformed(java.awt.event.ActionEvent evt) {
        		scamort.setStartDate((String) jTable1.getValueAt(1, 1));
        		scamort.setEndDate((String) jTable1.getValueAt(2, 1));
        		scamort.setFrq((String) jTable1.getValueAt(4, 1));
        		
        		scamort.fillTable();
        		 scamort.setVisible(true);
        		 
        	 }
        });
        scamort.addWindowListener(new WindowListener() {
			
			@Override
			public void windowOpened(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowIconified(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowDeiconified(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowDeactivated(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowClosing(WindowEvent arg0) {
				StringBuffer value = new StringBuffer("Scheduledvalue=");
				int rowCount = scamort.model.getRowCount();
				for (int i = 0; i < rowCount; i++) {
					value = value
							.append(scamort.jTable0.getValueAt(i, 0).toString())
							.append(":")
							.append(scamort.jTable0.getValueAt(i, 1).toString())
							.append(":")
							.append(scamort.jTable0.getValueAt(i, 2).toString())
							.append(":")
							.append(scamort.jTable0.getValueAt(i, 3).toString())
							.append("|");
					
					//scamort.model.removeRow(i);
				}
				setScheduledValues(value.toString());
				scamort.model = null;
				scamort.jTable0.removeAll();
				
				//scamort.model.re
			}
			
			@Override
			public void windowClosed(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void windowActivated(WindowEvent arg0) {
				// TODO Auto-generated method stub
				
			}
		});
       
        	
       
        		
        jButton2.addActionListener(new java.awt.event.ActionListener() {
        	String amort = "";
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	String amortType = (String) jTable1.getValueAt(0, 1);
            	String startDate = (String) jTable1.getValueAt(1, 1);
            	String endDate = (String) jTable1.getValueAt(2, 1);
            	String rate = (String) jTable1.getValueAt(3, 1);
            	String freq = (String) jTable1.getValueAt(4, 1);
            	String openTerm="false";
            	String loanTerm="false";
            	if(jCheckBox1.isSelected())
            		openTerm = "true";
            	if(jCheckBox2.isSelected())
            		loanTerm = "true";
            	if(commonUTIL.isEmpty(amortType))  {
            			commonUTIL.showAlertMessage("Select amortization Type" );
            	        return;
            	}
            	if(commonUTIL.isEmpty(startDate) || (!commonUTIL.isStringDate(startDate)))  {
        			commonUTIL.showAlertMessage("Select Start Date  " );
        	        return;
            	}
            	if(commonUTIL.isEmpty(endDate) || (!commonUTIL.isStringDate(endDate)))  {
        			commonUTIL.showAlertMessage("Select End Date  " );
        	        return;
            	} 
            	if(commonUTIL.isEmpty(rate) || (!commonUTIL.isNumeric(rate))) {
            		commonUTIL.showAlertMessage("Enter Rate in numberic" );
            		return;
            	} 
            	
            	if(commonUTIL.isEmpty(freq))  {
            		commonUTIL.showAlertMessage("Select Frequency Type" );
            		return;
            	} else {
            		
            		amort = "Type=" + amortType + ";startDate=" + startDate
					+ ";endDate=" + endDate + ";rate=" + rate
					+ ";freq=" + freq + ";openTerm=" + openTerm
					+ ";loanTerm=" + loanTerm + ";"
					+ getScheduledValues();
            		setAmoritization(amort);
            		// System.out.println(amort);
            	}
            }
        });
        setTableValuesBlank();
        jScrollPane1.setViewportView(jTable1);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>
    // Variables declaration - do not modify
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JCheckBox jCheckBox1;
    public javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration
    
    private void setTableValuesBlank() {
		amorModel.insertRow(amorModel.getRowCount(),  new Object[]{ "Amortization", ""});
		amorModel.insertRow(amorModel.getRowCount(),  new Object[]{ "Start Date", ""});
		amorModel.insertRow(amorModel.getRowCount(),  new Object[]{ "End Date", ""});
		amorModel.insertRow(amorModel.getRowCount(),  new Object[]{ "Rate", ""});
		amorModel.insertRow(amorModel.getRowCount(),  new Object[]{ "Frequency", ""});
		 jTable1.setValueAt(commonUTIL.getDateFormat(commonUTIL.getCurrentDate()), 1, 1);
		 jTable1.setValueAt("None", 0, 1);
		
	}
    
    private String []  convertVectortoSringArray(Vector v) {
    	String name [] = null;
    	int i=0;
    	if(v != null ) {
    		name = new String[v.size()];
    		Iterator its = v.iterator();
    		while(its.hasNext()) {
    			name [i] = ((StartUPData) its.next()).getName();
    			i++;
    		}
    	}
		return name;                                           
        // TODO add your handling code here:
    }
	public void setvalues(String amoritizationData) {
		// TODO Auto-generated method stub
		if(!commonUTIL.isEmpty(amoritizationData)) {
			setAmoritization(amoritizationData);
			String amortData [] = amoritizationData.split(";");
			for(int i=0;i<amortData.length;i++) {
				String data =  amortData[i];
				if(data.contains("Type=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					jTable1.setValueAt(value,0, 1);
				}
				if(data.contains("startDate=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					jTable1.setValueAt(value,1, 1);
				}
				if(data.contains("endDate=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					jTable1.setValueAt(value,2, 1);
				}
				if(data.contains("rate=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					jTable1.setValueAt(value,3, 1);
				}
				if(data.contains("freq=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					jTable1.setValueAt(value,4, 1);
				}
				if(data.contains("openTerm=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					if(value.equalsIgnoreCase("true")) {
						jCheckBox1.setSelected(true);
					} else {
						jCheckBox1.setSelected(false);
					}
				}
				if(data.contains("loanTerm=")) {
					String value = data.substring(data.indexOf("=")+1, data.length());
					if(value.equalsIgnoreCase("true")) {
						jCheckBox2.setSelected(true);
					}else {
						jCheckBox2.setSelected(false);
					}
				}
			}
		} else {
			jTable1.setValueAt(new String(""),0, 1);
			jTable1.setValueAt(new String(""),1, 1);
			jTable1.setValueAt(new String(""),2, 1);
			jTable1.setValueAt(new String(""),3, 1);
			jTable1.setValueAt(new String(""),4, 1);
			 jTable1.setValueAt(commonUTIL.getDateFormat(commonUTIL.getCurrentDate()), 1, 1);
			jCheckBox1.setSelected(false);
			jCheckBox2.setSelected(false);
			 jTable1.setValueAt("None", 0, 1);
			
		}
		
	} 
	
}
